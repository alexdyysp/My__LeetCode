class Solution {
public:
    vector<vector<int>> generateMatrix(int n) {
        vector<vector<int>> result(n, vector<int>(n, 0));
        int R_step[4] = {0, 1,  0, -1};
        int C_step[4] = {1, 0, -1,  0};
        int way = 0;
        vector<vector<int>> flag(n+2, vector<int>(n+2, 0));
        for(int i=0; i<n+2; i++){
            flag[i][0] = 1;
            flag[i][n+1] = 1;
            flag[0][i] = 1;
            flag[n+1][i] = 1;
        }
        int x=0;
        int y=0;
        for(int i=0; i<n*n; i++){
            if(flag[x+1][y+1]){
              x -= R_step[way];
              y -= C_step[way];
              way = (way+1)%4;
              x += R_step[way];
              y += C_step[way];     
            }
            result[x][y] = i+1; 
            flag[x+1][y+1] = 1;
            x += R_step[way];
            y += C_step[way];  
        }
        return result;
    }
};
