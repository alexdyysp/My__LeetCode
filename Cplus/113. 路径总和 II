/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    vector<vector<int>> pathSum(TreeNode* root, int sum) {
        vector<vector<int>> result;
        if(root==nullptr) return result;
        vector<int> path;
        dfs(root, sum, 0, path, result);
        return result;
    }
private:
    void dfs(TreeNode* root, int target, int tmp, vector<int> path, vector<vector<int>>& result){
        if(root->left==nullptr && root->right==nullptr){
            if(target==tmp+root->val){
                path.push_back(root->val);
                result.push_back(path);
            }
            return;
        }
        path.push_back(root->val);
        tmp += root->val;
        if(root->left) dfs(root->left, target, tmp, path, result);
        if(root->right) dfs(root->right, target, tmp, path, result);
    }
};
