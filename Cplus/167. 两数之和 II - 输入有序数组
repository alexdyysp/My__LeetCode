class Solution {
public:
    vector<int> twoSum(vector<int>& numbers, int target) {
        int index1,index2;
        for(int i=0; i<numbers.size(); i++){
            bool flag = false;
            int target_nd = target - numbers[i];
            index1 = i;
            for(int j=i+1; j<numbers.size(); j++){
                if(target_nd<numbers[j])
                    break;
                if(target_nd==numbers[j]){
                    index2 = j;
                    flag = true;
                    break;
                }
            }
            if(flag) break;
        }
        
        vector<int> result = {index1+1, index2+1};
        return result;
    }
};

/*
Timt: O(n)
Space: O(1)
*/
class Solution {
public:
    vector<int> twoSum(vector<int>& numbers, int target) {
        int low = 0, high = numbers.size() - 1;
        while (low < high) {
            int sum = numbers[low] + numbers[high];
            if (sum == target)
                return {low + 1, high + 1};
            else if (sum < target)
                ++low;
            else
                --high;
        }
        return {-1, -1};
    }
};

