class Solution {
public:
    int maxProfit(vector<int>& prices) {
        int sum = 0;
        for(int i = 1; i < prices.size(); i++){
            int diff = prices[i] - prices[i-1];
            sum += (diff>0?diff:0);
        }   
        return sum;
    }
};

// dp
class Solution {
public:
    int maxProfit(vector<int>& prices) {
        if (!prices.size()) return NULL;
        int dp[prices.size()][2];
        dp[0][0] = 0;
        dp[0][1] = -prices[0];
        for (int i=1; i<prices.size(); i++){
            dp[i][0] = max(dp[i-1][0], dp[i-1][1]+prices[i]);
            dp[i][1] = max(dp[i-1][1], dp[i-1][0]-prices[i]);
        }
        return dp[prices.size()-1][0];
    }
};
