class Solution {
public:
    int maxProfit(vector<int>& prices) {
        if (!prices.size()) return NULL;
        int dp[prices.size()][2];
        dp[0][0] = 0;
        dp[0][1] = -prices[0];
        int tmp = dp[0][0];
        for (int i=1; i<prices.size(); i++){
            dp[i][0] = max(dp[i-1][0], dp[i-1][1]+prices[i]);
            dp[i][1] = max(dp[i-1][1], tmp-prices[i]);
            //pre_cool = tmp;
            tmp = dp[i-1][0]; // 记录当前的dp[i-1][0]，在下一轮就是dp[i-2][0]
            
        }
        return dp[prices.size()-1][0];
    }
};
