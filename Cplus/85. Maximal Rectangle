class Solution {
public:
    int maximalRectangle(vector<vector<char>>& matrix) {
        if(matrix.empty()) return 0;
        int m = matrix.size();
        int n = matrix[0].size();
        int area = 0;
        vector<int> height(n, 0);
        vector<int> left(n, 0);
        vector<int> right(n, n);
        for(int i = 0; i<m; i++){
            int l = 0, r = n;
            // cal left(i, j) from left to right
            for(int j=0; j<n; j++){
                if(matrix[i][j]=='1'){
                    height[j]++;
                    left[j] = max(left[j], l);
                }
                else{
                    l = j+1;
                    height[j]=0; left[j]=0; right[j]=n;
                }
            }
            // cal right from right to left
            for(int j=n-1; j>=0; --j){
                if(matrix[i][j] == '1'){
                    right[j] = min(right[j], r);
                    area = max(area,height[j]*(right[j]-left[j]));
                }else
                    r = j;
            }
        }
        return area;
    }
};
