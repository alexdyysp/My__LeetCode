class Solution {
public:
    int maxProfit(vector<int>& prices) {
        int N = prices.size();
        if(!N) return NULL;
        int dp[N][3][2];
        for(int i=0; i<N; i++)
            for(int j=0; j<3; j++)
                for(int k=0; k<2; k++)
                    dp[i][j][k] = 0;
        dp[0][0][1] = -prices[0];
        for (int i=0; i<N; i++){
            for(int j=2; j>=1; j--){
                if(i==0){
                    dp[i][j][0] = 0;
                    dp[i][j][1] = -prices[i];
                    continue;
                }
                dp[i][j][0] = max(dp[i-1][j][0], dp[i-1][j][1]+prices[i]);
                dp[i][j][1] = max(dp[i-1][j][1], dp[i-1][j-1][0]-prices[i]);
            }
        }
        return dp[N-1][2][0];
    }
};
