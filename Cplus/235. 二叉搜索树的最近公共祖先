/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
/**
 * 从根节点开始遍历树
 * 如果节点 ppp 和节点 qqq 都在右子树上，那么以右孩子为根节点继续 1 的操作
 * 如果节点 ppp 和节点 qqq 都在左子树上，那么以左孩子为根节点继续 1 的操作
 * 如果条件 2 和条件 3 都不成立，这就意味着我们已经找到节 ppp 和节点 qqq 的 LCA 了
 */
class Solution {
public:
    TreeNode* lowestCommonAncestor(TreeNode* root, TreeNode* p, TreeNode* q) {
        int left = min(p->val, q->val);
        int right = max(p->val, q->val);
        if (root->val > left && root->val > right) return lowestCommonAncestor(root->left, p, q);
        if (root->val < left && root->val < right) return lowestCommonAncestor(root->right, p, q);
        return root;
    }
};
