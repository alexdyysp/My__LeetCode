class Solution {
public:
    int myAtoi(string str) {
        int num = 0;
        int sign = 1;
        int class Solution {
public:
    int myAtoi(string str) {
        int num = 0;
        int sign = 1;
        int n = str.length();
        int i = 0;
        while(str[i]==' '&&i<n) i++;//skip whitespaces
        if(str[i]=='+'){
            i++;
        }else if(str[i]=='-'){
            sign=-1;
            i++;
        }//recognize the +/- sign
        for(i;i<n;i++){
            if(str[i]<'0'||str[i]>'9') break;
            if(num>INT_MAX/10||(num==INT_MAX/10&&(str[i]-'0')>INT_MAX%10)){//check before already overflow 
                return sign==-1?INT_MIN:INT_MAX;
            }
            num=num*10+str[i]-'0';
        }
        return num*sign;
    }
};n = str.length();
        int i = 0;
        while(str[i]==' '&&i<n) i++;//skip whitespaces
        if(str[i]=='+'){
            i++;
        }else if(str[i]=='-'){
            sign=-1;
            i++;
        }//recognize the +/- sign
        for(i;i<n;i++){
            if(str[i]<'0'||str[i]>'9') break;
            if(num>INT_MAX/10||(num==INT_MAX/10&&(str[i]-'0')>INT_MAX%10)){//check before already overflow 
                return sign==-1?INT_MIN:INT_MAX;
            }
            num=num*10+str[i]-'0';
        }
        return num*sign;
    }
};
