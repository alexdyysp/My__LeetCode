class Solution {
public:
    int maxAreaOfIsland(vector<vector<int>>& grid) {
        int c = grid.size();
        if(c==0) return 0;
        int r = grid[0].size();
        int res=0;
        for(int i=0; i<c; i++){
            for(int j=0; j<r; j++){
                if(grid[i][j]==1)
                    res = max(res, dfs(grid, i, j));
            }
        }
        
        return res;
    }
    
private:
    int dfs(vector<vector<int>>& grid, int x, int y){
        int c = grid.size();
        int r = grid[0].size();
        if(x<0 || x>=c || y<0 || y >= r || grid[x][y]==0) return 0;
        grid[x][y] = 0;
        return 1 + dfs(grid, x+1, y) + dfs(grid, x-1, y) + dfs(grid, x, y+1) + dfs(grid, x, y-1);
    }
};
