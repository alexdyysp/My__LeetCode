class Solution {
public:
    vector<int> searchRange(vector<int>& nums, int target) {
        vector<int> result = {-1, -1};
        binarySearch(nums, 0, nums.size()-1, target, true, result);
        binarySearch(nums, 0, nums.size()-1, target, false, result);
        
        return result;
    }
private:
    void binarySearch(vector<int>& nums, int low, int high, int target, bool flag, vector<int>& result){
        if(low <= high){
            int mid =  (high + low)/2;
            if(nums[mid] > target)
                binarySearch(nums, low, mid-1, target, flag, result);
            else if(nums[mid] < target)
                binarySearch(nums, mid+1, high, target, flag, result);
            else{
                if(flag){
                    result[0] = mid;
                    binarySearch(nums, low, mid-1, target, flag, result);
                }else{
                    result[1] = mid;
                    binarySearch(nums, mid+1, high, target, flag, result);
                }
            }
        }
        return;
    }
};
