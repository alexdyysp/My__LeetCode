#include<iostream>
#include<vector>
using namespace std;
class Solution {
public:
    void nextPermutation(vector<int>& nums) {
        cout<<"find increase permutation from right to left"<<endl;
        vector<int>::iterator i;
        vector<int>::iterator j=nums.end()-1;
        for(i=nums.end()-1;i != nums.begin();i--)
        {
            if( *i > *(i-1) )
                break;
        }
        //
        cout<<"*i="<<*i<<" i="<<&*i<<" *i-1="<<*(i-1)<<endl;
        cout<<"increasing permutation:"<<endl;
        for(vector<int>::iterator k=i;k!= nums.end();k++)
        {
            cout<<*k<<" ";
        }
        cout<<endl;
        //
        cout<<"swap next number and bigger one"<<endl;
        if(i!=nums.begin())
        {
            while(j!=i-1 && *j<=*(i-1))
            {
                j--;
            }
            cout<<"*j="<<*(i-1)<<" j="<<&*j<<endl;
            swap(*(i-1),*j);
            cout<<"after swap"<<endl;
            for(vector<int>::iterator n=nums.begin();n!= nums.end();n++)
            {
                cout<<*n<<" ";
            }
            cout<<endl;
        }
        cout<<"reverse the  permutation"<<endl;
        reverse(i,nums.end());
    }
    template <class BidirectionalIterator>
    void reverse (BidirectionalIterator first, BidirectionalIterator last)
    {
      while ((first!=last)&&(first!=--last)) {
        iter_swap (first,last);
        ++first;
      }
    }
    template<class T>
    void swap(T& a,T& b)
    {
        T c(a);
        a=b;
        b=c;
    }
};
int main()
{
    Solution so;
    vector<int> arr = {1,5,1};
    for(vector<int>::iterator i=arr.begin();i!= arr.end();i++)
    {
        cout<<*i<<" ";
    }
    cout<<endl;
    so.nextPermutation(arr);
    for(vector<int>::iterator i=arr.begin();i!= arr.end();i++)
    {
        cout<<*i<<" ";
    }
    cout<<endl;
    return 0;
}
