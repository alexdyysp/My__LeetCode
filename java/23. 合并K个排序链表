/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
class Solution {
    public ListNode mergeKLists(ListNode[] lists) {
        if(lists.length==0) return null;
        return merge(lists, 0, lists.length-1);
    }
    
    public ListNode merge(ListNode[] lists, int left, int right) {
        if (left == right) {
            return lists[left];
        }
        int mid = left + (right - left) / 2;
        ListNode l1 = merge(lists, left, mid);
        ListNode l2 = merge(lists, mid + 1, right);
        return binaryMerge(l1, l2);
    }
    
    public ListNode binaryMerge(ListNode A, ListNode B){
        ListNode head = new ListNode(0);
        ListNode tmp = head;
        while(A!=null && B!=null){
            if(A.val > B.val){
                tmp.next = B;
                B = B.next;
            }else{
                tmp.next = A;
                A = A.next;
            }
            tmp = tmp.next;
        }
        
        tmp.next = A == null? B: A;
        
        return head.next;
    }
}
