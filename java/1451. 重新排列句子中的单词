/*
T: O(nlog(n))

字符串全变小写后分数组
再按长度排序，首字母变大写
拼接数组为一个字符串
*/

class Solution {
    public String arrangeWords(String text) {
        String[] textSplit = text.toLowerCase().split(" ");
        
        Arrays.sort(textSplit, (o1, o2) -> {return o1.length()-o2.length();});
        
        StringBuilder ans = new StringBuilder();
        
        textSplit[0] = textSplit[0].substring(0, 1).toUpperCase() + textSplit[0].substring(1, textSplit[0].length());
        for(int i=0; i<textSplit.length; i++){
            if(i==0) ans.append(textSplit[0] + " ");
            else if(i==textSplit.length-1) ans.append(textSplit[i]);
            else ans.append(textSplit[i] + " ");
        }
        
        return ans.toString();
            
    }
}
